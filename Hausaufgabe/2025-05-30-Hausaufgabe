### Debug 1 :
a = [1, 2, 3]
b = a
b[0] = 99
print("a =", a)
print("b =", b)
## Frage: Warum wird a[0] ebenfalls zu 99, obwohl wir nur b verändert haben?
## Wie kann man das verhindern?
## Lösung
b = a.copy()


### Debug 2 :
farben = ["rot", "gruen", "blau"]
print(farben[3])
## Frage: Was passiert hier? Was wäre die korrekte Lösung?
## Lösung
print(farben[2])


### Debug 3:
zahlen = [1, 2, 3, 4]
doppelt = [x + x for x in zahlen if x % 2]
print(doppelt)
## Frage: Warum sind nur bestimmte Zahlen im Ergebnis?
## Was macht die Bedingung if x % 2 genau?
## Lösung
# Hier werden nur ungerade Zahlen genommen



### Debug 4:
tupel = (1, 2, 3)
tupel[1] = 5
print(tupel)
## Frage: Warum funktioniert das nicht?
## Lösung
liste = list(tupel)
liste[1] = 5
tupel = tuple(liste)


### Debug 5:
daten = ("Ali", [10, 20])
daten[1].append(30)
print(daten)
## Frage: Wie kann sich der Inhalt hier verändern, obwohl Tupel eigentlich unveränderlich sind?
## Lösung
# Die Tupel ist unveränderbar kann aber veränderbare Objekte enthalten


### Debug 6:
farben = {"rot": "#FF0000", "gruen": "#00FF00", "blau": "#0000FF"}
for eintrag in farben:
    print(eintrag)
## Frage: Warum wird hier nur der Schlüssel ausgegeben?
## Wie müsste man den Code ändern, um rot = #FF0000 usw. zu sehen
## Lösung
for schluessel, wert in farben.items():
    print(f"{schluessel} = {wert}")